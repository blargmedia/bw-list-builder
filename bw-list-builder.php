<?php
/**
 * Plugin Name: BW List Builder
 * Plugin URI: http://blargmedia.ca
 * Description: Email List builder example project from Udemy Ultimate WP Plugin course
 * Version: 0.0.1
 * Author: Ben Wong // blargmedia.ca
 * Author URI: http://blargmedia.ca
 */

/* 0. table of contents */
/*
    1. hooks
      1.1   custom shortcodes
      1.2   custom admin column headers - subscribers
      1.3   custom admin column data - subscribers
      1.4   titles for post types without titles
      1.5   custom admin column headers - lists
      1.6   custom admin column data - lists

    2. shortcodes
      2.1   bwlb_register_shortcodes()
      2.2   bwlb_form_shortcode()

    3. filters
      3.1   bwlb_subscriber_column_headers()
      3.2   bwlb_subscriber_column_data()
      3.2.1 bwlb_register_custom_admin_titles()
      3.2.2 bwlb_custom_admin_titles()
      3.3   bwlb_list_column_headers
      3.4   bwlb_list_column_data


    4. external scripts

    5. actions
      5.1   bwlb_save_subscription()
      
    6. helpers
    7. custom post types
    8. admin pages
    9. settings

*/


/* 1. hooks */

// 1.1
// register custom shortcodes on init action hook
add_action('init', 'bwlb_register_shortcodes');

// 1.2
// register custom admin column headers
add_filter('manage_edit-bwlb_subscriber_columns', 'bwlb_subscriber_column_headers');

// 1.3
// register custom admin column data with priority 1 and indicate we need 2 params
add_filter('manage_bwlb_subscriber_posts_custom_column', 'bwlb_subscriber_column_data', 1, 2);

// 1.4
// register custom titles for post type data without titles
add_action('admin_head-edit.php', 'bwlb_register_custom_admin_titles');

// 1.5
// register custom admin column headers
add_filter('manage_edit-bwlb_list_columns', 'bwlb_list_column_headers');

// 1.6
// register custom admin column data with priority 1 and indicate we need 2 params
add_filter('manage_bwlb_list_posts_custom_column', 'bwlb_list_column_data', 1, 2);


/* 2. shortcodes */

// 2.1
// registers all custom shortcodes - can add more here later
function bwlb_register_shortcodes() {

  // sets bwlb_form against form_shortcode callback function
  add_shortcode('bwlb_form', 'bwlb_form_shortcode');

}

// 2.2
// create the html output to be generated by the shortcode
function bwlb_form_shortcode( $args, $content="" ) {  // wp auto passes in the args and contents

  // get the list id from the args with sanity checking
  $list_id = 0;
  if ( isset(args['id']) ) $list_id = (int) $args['id'];




  // setup output variable - the form html that will be returned
  $output = '
    <div class="bwlb">
      <form id="bwlb_form" name="bwlb_form" class="bwlb-form" method="post"
      action="/wp-admin/admin-ajax.php?action=bwlb_save_subscription">

        <input type="hidden" name="bwlb_list" value="'. $list_id .'">

        <p class="bwlb-input-container">
          <label>Your Name</label><br/>
          <input type="text" name="bwlb_fname" placeholder="first name" />
          <input type="text" name="bwlb_lname" placeholder="last name" />
        </p>
        <p class="bwlb-input-container">
          <label>Your Email</label><br/>
          <input type="email" name="bwlb_email" placeholder="email" />
        </p>';

        // validate any incoming content and include in the output if needed
        if ( strlen($content) ):
          $output .= '<div clas="bwlb-content">';
          $output .= wpautop($content); // wrap the content with wp paragraphs
          $output .= '</div>';
        endif;

        // close out the form html
        $output .= '<p class="bwlb-input-container">
          <input type="submit" name="bwlb_submit" value="sign up" />
        </p>
      </form>
    </div>
  ';

  return $output;

}


/* 3. filters */

// 3.1
// filters the display of the subscriber headings in the admin custom post list view
// wp passes in an array of the columns
function bwlb_subscriber_column_headers ( $columns ) {

  // create custom column header data
  // new associative array to override the incoming param
  $columns = array (
    'cb'    => '<input type="checkbox" />',  // checkbox in the subscriber display
    'title' => __('Subscriber Name'), // __() to allow for translatable text strings
    'email' => __('Email Address')
  );

  return $columns;
}

// 3.2
// filters the display of the subscriber data in the admin custom post list view
// wp passes in the column name and the id of the post
function bwlb_subscriber_column_data ( $column, $post_id ) {

  // init return text
  $output = '';

  switch ( $column ) {

    case 'title':
      // get the custom name data
      $fname = get_field('bwlb_fname', $post_id);
      $lname = get_field('bwlb_lname', $post_id);
      $output .= $fname . ' ' . $lname;
      break;
    case 'email':
      // get the custom email data
      $email = get_field('bwlb_email', $post_id);
      $output .= $email;
      break;
  }

  echo $output; // display the retrieved data
}

// 3.2.1
// register special custom admin title columns
function bwlb_register_custom_admin_titles() {
  add_filter ('the_title', 'bwlb_custom_admin_titles', 99, 2);
}

// 3.2.2
// deal with custom admin title column data for post types without titles
// wp passes in the title and post id
function bwlb_custom_admin_titles( $title, $post_id ) {

  global $post; // pulls in the post variable from the global scope

  $output = $title;

  if ( isset($post->post_type) ):   // see if the post has a valid post type
    switch ( $post->post_type ) {
      case 'bwlb_subscriber':  // check that we're using the subscriber type
        $fname = get_field('bwlb_fname', $post_id);
        $lname = get_field('bwlb_lname', $post_id);
        $output = $fname . ' ' . $lname; // setup the title to be the full name
    }
  endif;

  return $output;

}

// 3.3
// filters the display of the list headings in the admin custom post list view
// wp passes in an array of the columns
function bwlb_list_column_headers ( $columns ) {

  // create custom column header data
  // new associative array to override the incoming param
  $columns = array (
    'cb'    => '<input type="checkbox" />',  // checkbox in the subscriber display
    'title' => __('List Name') // __() to allow for translatable text strings
  );

  return $columns;
}

// 3.4
// filters the display of the list data in the admin custom post list view
// wp passes in the column name and the id of the post
function bwlb_list_column_data ( $column, $post_id ) {

  // init return text
  $output = '';

  switch ( $column ) {

    case 'tmp':
      // get the custom name data
      //$fname = get_field('bwlb_fname', $post_id);
      //$lname = get_field('bwlb_lname', $post_id);
      //$output .= $fname . ' ' . $lname;
      //break;
  }

  echo $output; // display the retrieved data
}

/* 4. external scripts */

/* 5. actions */

// 5.1
// save subscription data to an existing or new subscriber
function bwlb_save_subscription() {

  // init result data to be the negative outcome
  $result = array (
    'status' => 0,
    'message' => 'Subscription was not saved.'
  );

  // error storage
  $errors = array ();

  // php try/catch statement
  /*
  try {
    // code
  } catch (Exception $e) {
    // do something with $e
  }
  */

  try {

    // get the list id from the form post
    $list_id = (int) $_POST['bwlb_list'];

    // prepare the subscriber data from the post
    // esc_attr - wp function to clean input data and ensure it is safe
    $subscriber_data = array (
      'fname'=> esc_attr( $_POST['bwlb_fname'] ),
      'lname'=> esc_attr( $_POST['bwlb_lname'] ),
      'email'=> esc_attr( $_POST['bwlb_email'] )
    );

    // attempt to create/save subscriber
    $subscriber_id = bwlb_save_subscriber( $subscriber_data );

    // if saved subscriber id will be non zero
    if ( $subscriber_id ):

      // if already subscribed
      if (bwlb_subscriber_has_subscription( $subscriber_data, $list_id )):

        // get the list from the form post
        $list = get_post( $list_id );  // wp builtin function to get a post

        // setup the error message
        $result ['message'] .= esc_attr( $subscriber_data['email'] . ' is already subscribef to ' . $list->post_title . '.');

      else:

        // save the subscription
        $subscription_saved = bwlb_add_subscription ( $subscriber_id, $list_id );

        // check success (non zero)
        if ( $subscription_saved ):
          $result['status'] = 1;
          $result['message'] = 'Subscription saved';
        endif;
      endif;
    endif;

  } catch ( Exception $e ) {

    // php error - add to error message
    $result['message'] = 'Caught exception: ' . $e->getMessage();
  }

  // return as json string to be used in js / ajax
  bwlb_return_json($result);
}

/* 6. helpers */

/* 7. custom post types	*/

/* 8. admin pages */

/* 9. settings */





// eof
?>
